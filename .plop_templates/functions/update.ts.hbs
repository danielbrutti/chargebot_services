import middy from "@middy/core";
import validator from "@middy/validator";
import httpErrorHandler from "@middy/http-error-handler";
import jsonBodyParser from "@middy/http-json-body-parser";
import { JsonResponseSchema } from "../shared/schemas";
import { Update{{pascalCase name}}Schema } from "./{{snakeCase name}}.schema";
import { {{pascalCase name}} } from "@chargebot-services/core/services/{{snakeCase name}}";

const handler = async (event: any) => {
    const id = +event.pathParameters!.id!;
    const user_id = event.requestContext.authorizer.jwt.claims.sub;
    const {{snakeCase name}} = await {{pascalCase name}}.update(id, event.body, user_id);

    if (!{{snakeCase name}}) {
        return {
            statusCode: 404,
            headers: { "Content-Type": "application/json" }
        };
    }

    return {
        statusCode: 200,
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({{snakeCase name}})
    };
};

export const main = middy(handler)
    .use(jsonBodyParser())
    .use(validator({
        eventSchema: Update{{pascalCase name}}Schema,
        responseSchema: JsonResponseSchema
    }))
    .use(httpErrorHandler());